# use the latest ubuntu environment (18.04) available on travis
dist: xenial

language: go

# Force-enable Go modules. Also force go to use the code in vendor/
# These will both be unnecessary when Go 1.13 lands.
env:
  - GO111MODULE=on
#  - GOFLAGS='-mod vendor'

# You don't need to test on very old versions of the Go compiler. It's the user's
# responsibility to keep their compiler up to date.
go:
  - 1.12.x

# Only clone the most recent commit.
git:
  depth: 1

# Skip the install step. Don't `go get` dependencies. Only build with the code
# in vendor/
install: true

# Don't email me the results of the test runs.
notifications:
  email: false

# Anything in before_script that returns a nonzero exit code will flunk the
# build and immediately stop. It's sorta like having set -e enabled in bash.
# Make sure golangci-lint is vendored.
#before_script:
#  - go install github.com/golangci/golangci-lint/cmd/golangci-lint

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
#  - golangci-lint run       # run a bunch of code checkers/linters in parallel
  - go test -v -race ./...  # Run all the tests with the race detector enabled
  - env GOOS=linux go build  -o linux cmd/main.go
  - env GOOS=darwin go build  -o mac cmd/main.go
  - env GOOS=windows go build  -o win.exe cmd/main.go
deploy:
  provider: releases
  file:
    - "linux"
    - "mac"
    - "win.exe"
  skip_cleanup: true
  on:
    tags: true
  api_key:
    secure: lUF6LT+FXTZQJgG3EsG5pAScxqTyNZCvlXkNtjofDI+5XJfz12zRYtZeibAfHF8ifDDc0JmTfIZcPBZPUml4ok7z/QlDOkAE7kVbvG2coNrlfydE+SSFZ6l/+CU3FhBrrXsOWg9mzfAUNO5IcUM2gcx2yYzrFgIbkNh00KoKCwoVfEzIu/rS3YjfOiBkGzzBnOmRyGxfQVE+xG2AJYXNE3QR201OZp9kq9JWQRIW1jdRtpopn9pmKGYXiSBTqYO7MX04SAR1NmlIJeBcpm728cPRhU6siCM3KDdyNWCltqCPIY4GSoSCK0EuLiTt916Rc2Oa/STSdebScTLmF8lhq7eOS22zpm7B/J7lH3Ed6sE7opEuF3WmHRwMYuBj0qS8SZPeqAI2Dz2f3HgDWuKjch1ICinxzRTfn4uPODNde3MjhGaq1JKDe/SeBYunyX3F065pZMenYgx1nfqER0rRl1s/soQOurwM7S4Dzo7YpUpOdfpZCz0AvG6zJbHu7ioiBDRxdqEmWKLkExZFlzoaaNxfalld2Ll7zDiWoLCsXqZq57EhQvAhZ0r5cs5Rd8J0FY/R85CIVueH7acVTH0jUrYmgbqXc88HUy4SNPxpGQaXy+MoOqkLV6rjzY4wOHJgwmYbVhtxNag208Nes7Y8F7ECXehDiJe18Lxh3BqI0DA=
